// Generated by view binder compiler. Do not edit!
package com.petsaverapp.form.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.imageview.ShapeableImageView;
import com.petsaverapp.form.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemListExploreHomeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CardView cardViewHome;

  @NonNull
  public final ImageView detalheFundo;

  @NonNull
  public final ImageView imageBackGround;

  @NonNull
  public final ConstraintLayout mainConstraintHome;

  @NonNull
  public final ShapeableImageView photoPerfil;

  @NonNull
  public final TextView subTitleItemCard;

  @NonNull
  public final TextView titleItemCard;

  private ItemListExploreHomeBinding(@NonNull ConstraintLayout rootView,
      @NonNull CardView cardViewHome, @NonNull ImageView detalheFundo,
      @NonNull ImageView imageBackGround, @NonNull ConstraintLayout mainConstraintHome,
      @NonNull ShapeableImageView photoPerfil, @NonNull TextView subTitleItemCard,
      @NonNull TextView titleItemCard) {
    this.rootView = rootView;
    this.cardViewHome = cardViewHome;
    this.detalheFundo = detalheFundo;
    this.imageBackGround = imageBackGround;
    this.mainConstraintHome = mainConstraintHome;
    this.photoPerfil = photoPerfil;
    this.subTitleItemCard = subTitleItemCard;
    this.titleItemCard = titleItemCard;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemListExploreHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemListExploreHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_list_explore_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemListExploreHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardViewHome;
      CardView cardViewHome = ViewBindings.findChildViewById(rootView, id);
      if (cardViewHome == null) {
        break missingId;
      }

      id = R.id.detalheFundo;
      ImageView detalheFundo = ViewBindings.findChildViewById(rootView, id);
      if (detalheFundo == null) {
        break missingId;
      }

      id = R.id.imageBackGround;
      ImageView imageBackGround = ViewBindings.findChildViewById(rootView, id);
      if (imageBackGround == null) {
        break missingId;
      }

      ConstraintLayout mainConstraintHome = (ConstraintLayout) rootView;

      id = R.id.photoPerfil;
      ShapeableImageView photoPerfil = ViewBindings.findChildViewById(rootView, id);
      if (photoPerfil == null) {
        break missingId;
      }

      id = R.id.subTitle_item_card;
      TextView subTitleItemCard = ViewBindings.findChildViewById(rootView, id);
      if (subTitleItemCard == null) {
        break missingId;
      }

      id = R.id.title_item_card;
      TextView titleItemCard = ViewBindings.findChildViewById(rootView, id);
      if (titleItemCard == null) {
        break missingId;
      }

      return new ItemListExploreHomeBinding((ConstraintLayout) rootView, cardViewHome, detalheFundo,
          imageBackGround, mainConstraintHome, photoPerfil, subTitleItemCard, titleItemCard);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
